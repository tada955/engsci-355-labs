{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Setting Up JaamSim and HCCM\n",
        "\n",
        "In this lab you will walk through the set up of how to run JaamSim from source in a VSCode project and how to include the HCCM library in JaamSim.\n",
        "\n",
        "## Prerequisites\n",
        "\n",
        "These instructions were prepared using:\n",
        "\n",
        "1. Git -- 2.47.0.2;\n",
        "2. GitHub Desktop -- 3.4.8 (x64);\n",
        "3. Java -- Amazon Corretto JRE 21;\n",
        "4. VSCode -- 1.95.1.\n",
        "\n",
        "They should work with more recent versions of the software too.\n",
        "All of this software is standard on Engineering lab machines.\n",
        "Amazon Corretto JRE 21 is available on the University of Auckland's Software Centre.\n",
        "\n",
        "## Create the Project Folder Structure\n",
        "\n",
        "Create a new folder on your H drive called ENGSCI355.\n",
        "Then create three folders within this one, called **sim**, **labs**, and **workspace**.\n",
        "The **sim** folder will contain the java code for the simulation software Jaamsim, including custom code that you write, and is the focus of these instructions.\n",
        "The **labs** folder will contain subfolders for each lab with the simulation files for each.\n",
        "Create a folder for HCCM logic functions within the **sim** folder.\n",
        "We will use **sim\\_custom** in these instructions.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/1_Create_JaamSim_Folders.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Clone HCCM into the project folder\n",
        "\n",
        "Open GitHub Desktop and go to File $\\rightarrow$ Clone repository, then select the URL tab and enter\n",
        "\n",
        "> https://github.com/mosu001/hccm\n",
        "\n",
        "as the URL.\n",
        "Choose the Local path to be the **sim** folder that you just created.\n",
        "\n",
        "into an hccm folder within the **sim** folder.\n",
        "This will create an **hccm** folder within the **sim** folder that contains the HCCM and Jaamsim code.\n",
        "\n",
        "Note, if you use git from the command line, e.g., Git Bash, you need to add the recurse submodules option\n",
        "\n",
        "`git clone --recurse-submodules https://github.com/mosu001/hccm`\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/2_Clone_HCCM_Repo.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Create files to load HCCM and customised components\n",
        "\n",
        "From **hccm\\_custom** copy both **autoload.cfg** and **hccm.inc** into the **sim\\_custom** folder.\n",
        "Then open **autoload.cfg** with VSCode and edit it so that the content matches that in @fig-inc.\n",
        "\n",
        "::: {#fig-inc}\n",
        "```\n",
        "Include units.inc\n",
        "Include sim.inc\n",
        "Include units-imperial.inc\n",
        "Include units-knots.inc\n",
        "Include displayModels.inc\n",
        "Include graphics.inc\n",
        "Include probabilityDistributions.inc\n",
        "Include basicObjects.inc\n",
        "Include resourceObjects.inc\n",
        "Include examples.inc\n",
        "Include processFlow.inc\n",
        "Include calculationObjects.inc\n",
        "Include fluidObjects.inc\n",
        "Include submodels.inc\n",
        "Include hccm.inc\n",
        "Include sim_custom.inc\n",
        "```\n",
        "\n",
        "Customised autoload.cfg File\n",
        ":::\n",
        "\n",
        "Then rename **hccm.inc** to **sim\\_custom.inc**, open it in VSCode, and delete all the contents so it is blank.\n",
        "Don't forget to save both **autoload.cfg** and **sim\\_custom.inc**.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/3_Copy_Autoload.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Create a VSCode Java Project\n",
        "\n",
        "In VSCode use File $\\rightarrow$ Open Folder to open the **sim** folder.\n",
        "In the File Explorer open some folder so that you can see a .java file and open it, for example: hccm\\textbackslash custom\\textbackslash hccm\\textbackslash Constants.java.\n",
        "VSCode should then recognise that you have opened a Java file and the Java Projects pane should appear.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/4_Open_Sim_Project.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Configure Source Folders\n",
        "\n",
        "Now we need to tell VSCode where the source code of the project is.\n",
        "To do this we click on the three dots at the right of the 'Java Projects' title and select 'Configure Classpath'.\n",
        "A new menu should come up that allows you to add and remove sources.\n",
        "If anything other than **hccm\\textbackslash custom** is already there remove it by clicking on the x on the far right hand side, then 'Apply Settings'.\n",
        "Add new sources by clicking on 'Add Source Root'.\n",
        "First add **sim\\textbackslash hccm\\textbackslash jaamsim\\textbackslash src\\textbackslash main\\textbackslash java**, then click 'Apply Settings'.\n",
        "Then add both **sim\\textbackslash hccm\\textbackslash jaamsim\\textbackslash src\\textbackslash main\\textbackslash resources** and **sim\\textbackslash sim\\_custom**, remembering to apply the settings after each one.\n",
        "\n",
        "You can check to make sure that you have the correct sources configured by opening the **settings.json** file in the **.vscode** folder.\n",
        "Under \"java.project.sourcePaths\" there should be the following four entries:\n",
        "\n",
        "- hccm\\\\\\\\custom\n",
        "- hccm\\\\\\\\jaamsim\\\\\\\\src\\\\\\\\main\\\\\\\\java\n",
        "- hccm\\\\\\\\jaamsim\\\\\\\\src\\\\\\\\main\\\\\\\\resources\n",
        "- sim\\_custom\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/5_Configure_Classpath.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Configure JDK\n",
        "\n",
        "We need to make sure that VSCode is using the version of Java that we want it to.\n",
        "To do this we click on the three dots at the right of the 'Java Projects' title and select 'Configure Java Runtime'.\n",
        "A drop-down menu for JDK should come up.\n",
        "Make sure that JavaSE-21 is selected and then click 'Apply Settings'.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/6_Configure_JDK.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Configure Libraries\n",
        "\n",
        "JaamSim also needs the gluegen and jogl libraries to run.\n",
        "These are packaged with JaamSim as .jar files (a compiled Java program).\n",
        "They can be added by opening the project settings by clicking on the three dots at the right of the 'Java Projects' title and selecting either 'Configure Java Runtime' or 'Configure Classpath'.\n",
        "Then select the 'Libraries' tab on the right.\n",
        "Click on 'Add Library', then navigate to hccm\\\\jaamsim\\\\jar, select all of the files, and click 'Select Jar File'.\n",
        "Then click 'Apply Settings'.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/7_Configure_Libraries.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Integrate with JaamSim\n",
        "\n",
        "To integrate HCCM and any custom logic with JaamSim you need to copy your **autoload.cfg** and **sim\\_custom.inc** files (from **sim\\_custom**) to sim\\\\hccm\\\\jaamsim\\\\src\\\\main\\\\resources\\\\resources\\\\inputs and replace the autoload.cfg file that is currently there.\n",
        "You also need to copy the file **hccm.inc** in hccm\\\\custom to the same location.\n",
        "To check that they have been copied correctly you can look in the 'Java Projects' section on the left-hand side.\n",
        "Under hccm\\\\jaamsim\\\\src\\\\main\\\\resources\\\\resources\\\\inputs you should see both **hccm.inc** and **sim\\_custom.inc**.\n",
        "If you don't, try using the menu accessed by clicking the three dots and selecting 'Refresh'.\n",
        "\n",
        "::: {.content-visible when-format=\"html\" .column-page-right}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "{{< video figures/8_Integrate_HCCM.mp4 >}}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Run Custom JaamSim\n",
        "\n",
        "You should now be able to run JaamSim with the HCCM objects enabled.\n",
        "Start by clicking on the 'Run and Debug' menu on the left-hand side, then click on 'create a launch.json file', and select 'Java' from the list of debuggers that comes up in the middle of the screen.\n",
        "By doing this VSCode analyses the source code to determine which java files you might like to run and creates run configurations for each of them.\n",
        "In the file that is created you should see an entry with the name 'GUIFrame', this is the class that we need to run to start JaamSim.\n",
        "To make the view work correctly when JaamSim is running you need to add another parameter called \"vmArgs\" with the following entries enclosed in double quotes and separated by spaces on a single line:\n",
        "\n",
        "- \\--add-exports java.base/java.lang=ALL-UNNAMED\n",
        "- \\--add-exports java.desktop/sun.awt=ALL-UNNAMED\n",
        "- \\--add-exports java.desktop/sun.java2d=ALL-UNNAMED\n",
        "\n",
        "The final entry in the .launch file should look like this:\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "```{java}\n",
        "\"type\": \"java\",\n",
        "      \"name\": \"GUIFrame\",\n",
        "      \"request\": \"launch\",\n",
        "      \"mainClass\": \"com.jaamsim.ui.GUIFrame\",\n",
        "      \"projectName\": \"sim_d11998cc\",\n",
        "      \"vmArgs\": \"--add-exports java.base/java.lang=ALL-UNNAMED --add-exports java.desktop/sun.awt=ALL-UNNAMED --add-exports java.desktop/sun.java2d=ALL-UNNAMED\"\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Running an HCCM Model\n",
        "\n",
        "Download the single server queue model's folder from Canvas (ssq.zip).\n",
        "Create a new folder within the **labs** folder called **ssq** and extract ssq.zip into that folder.\n",
        "[Figures @fig-ssq; and @fig-ssq2] show what the extraction and then the **ssq** folder should look like afterwards.\n",
        "\n",
        "::: {#fig-ssq}\n",
        "![](figures/ssq.png){}\n",
        "\n",
        "Screenshot of Extracting ssq.zip\n",
        ":::\n",
        "\n",
        "::: {#fig-ssq2}\n",
        "![](figures/ssq_2.png){}\n",
        "\n",
        "Screenshot of Inside ``ssq'' After Extracting ssq.zip\n",
        ":::\n",
        "\n",
        "Now in VSCode right-click on the **sim\\_custom** folder and select New Java Package.\n",
        "Enter **ssq** for the name of the package and click Finish.\n",
        "\n",
        "<!-- \\begin{figure}[htb]\n",
        "     \\centering\n",
        "     % \\begin{subfigure}[b]{0.45\\textwidth}\n",
        "     %     \\centering\n",
        "         \\includegraphics[height=6cm]{images/create_new_package.png}\n",
        "     % \\end{subfigure}\n",
        "     \\hfill\n",
        "     % \\begin{subfigure}[b]{0.45\\textwidth}\n",
        "     %     \\centering\n",
        "         \\includegraphics[height=6cm]{images/ssq_package.png}\n",
        "     % \\end{subfigure}\n",
        "        \\caption{Screenshot of Package Creation}\n",
        "        \\label{fig:packageCreate}\n",
        "\\end{figure} -->\n",
        "\n",
        "Now go back to the ssq folder you extracted the zip file to and copy the FIFOQControlUnit.java file to the newly created package folder under sim\\textbackslash sim\\_custom\\textbackslash ssq.\n",
        "This java file defines a new Jaamsim object, in this case the control unit for the SSQ model.\n",
        "\n",
        "Finally we need to make this new object available in Jaamsim.\n",
        "To do this we need to edit the **sim\\_custom.inc** file that we put in sim\\textbackslash hccm\\textbackslash jaamsim\\textbackslash src\\textbackslash main\\textbackslash resources\\textbackslash resources\\textbackslash inputs.\n",
        "Open the **sim\\_custom.inc** file and also open the **ssq.inc** file in the ssq folder.\n",
        "Copy the contents of **ssq.inc** into **sim\\_custom.inc.**\n",
        "\n",
        "Run JaamSim with HCCM from Eclipse again (you might want to Refresh and Rebuild your project again just in case).\n",
        "You should now see a Single Server Queue palette in the Model Builder window. It has the FIFO trigger for the Single Server Queue model (you will learn more about triggers in later labs).\n",
        "\n",
        "Next in Jaamsim in the top left corner select file, then open, and open ssq.cfg from the ssq folder.\n",
        "@fig-ssqmod shows what you should see.\n",
        "Run the model by clicking on the blue play button in the top left and see how the customers and servers join together for service in the queue.\n",
        "@fig-ssqrun shows the model paused with a customer and server in process and a customer in the queue.\n",
        "\n",
        "::: {#fig-ssqmod}\n",
        "![](figures/ssqmod.png){}\n",
        "\n",
        "Screenshot of ssq.cfg When it Has Been Opened\n",
        ":::\n",
        "\n",
        "::: {#fig-ssqrun}\n",
        "![](figures/ssqrun.png){}\n",
        "\n",
        "Screenshot of ssq.cfg When Paused During Simulation\n",
        ":::\n",
        "\n",
        "<!-- \\begin{figure}[!htb]\n",
        "  \\includegraphics[scale=\\imsmallest]{images/ssqmod.png}\n",
        "  \\caption{Screenshot of ssq.cfg when it has been opened} \\label{fig:ssqmod}\n",
        "\\end{figure}\n",
        "\\vspace{-0.45cm}\n",
        "\n",
        "\\begin{figure}[!htb]\n",
        "  \\includegraphics[scale=\\imsmallest]{images/ssqrun.png}\n",
        "  \\caption{Screenshot of ssq.cfg when paused during simulation} \\label{fig:ssqrun}\n",
        "\\end{figure} -->"
      ],
      "id": "33607246"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}