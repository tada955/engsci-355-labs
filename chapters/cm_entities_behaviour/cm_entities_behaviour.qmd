# Inputs, Outputs, Entities, and Behaviour

In this lab and the next one, we will work through the Hierarchical Control Conceptual Modelling (HCCM) framework to build a conceptual model, aligned with the HCCM standard from lectures, that represents the practical activity, i.e., making paper cars, from @sec-hands-on-sim.

Working in the same groups as for the practical activity, you will work through the phases for HCCM modelling shown below and complete templates for those steps.
In this lab you will complete phases 1, 2, 3, and start phase 4.
The remainder of phase 4 will be completed in the next lab.
@sec-hands-on-sim provides a partially completed conceptual model of the car making system that you can use as a starting point.

<!-- \begin{center}
\includegraphics[width=0.65\textwidth]{hccm-framework.png} 
\end{center} -->

## Understanding of the Problem Situation

To understand the problem situation, you need to summarise what is happening in a concise way.
There is no strict rule for the best way to do this. One good approach is listening to the problem "holder", i.e., person/people who have the problem such as a client, then reflecting what you have heard in a couple of paragraphs with lists of key details and questions.
You can then work through one or more iterations of feedback and refinement to get a final, agreed upon problem description.

## Identification of Modelling and General Objectives

As described in lectures, there are two types of objectives to consider when developing a simulation:

> "The second step deals with the determination of the objectives. According to Robinson [26] they drive all aspects of the modeling process and are a subset of an organization's aims. Further, objectives can be classified into modeling and general objectives, where the latter are concerned with the flexibility, run-speed, visual-display and model/component reuse."

For the modelling objective you may like to think about what you trying to discover using simulation, and what level of performance you are trying to achieve in which areas/metrics.

## Defining Output Responses

Output responses are things that can be measured and compared to understand how a system has behaved/performed.
They are the metrics used to compare different simulation scenarios.
The output responses should let you know whether the modelling objectives have been achieved and why or how.
You may also want to consider how this will be reported (tables, graphs, etc.).

## Defining Input Factors

Input factors are things that can be changed and may modify how a system behaves/performs.
They are often defined to create multiple different scenarios to compare via simulation.
They are also what you can change to try and achieve the modelling objectives.

## Model Content

For the model content definition of our conceptual model we will follow the new HCCM standard.
This standard is presented in an academic article (currently under review) that is available on Canvas under \texttt{Files > Lectures > Conceptual Modelling} in the file 
[hccm-standard.pdf](https://canvas.auckland.ac.nz/courses/113292/files/folder/Lectures/Conceptual%20Modelling?preview=12376819)

### Identifying Entities

Before formally defining entities it is often useful to identify entities in the system and whether they are active, i.e., have behaviour like a doctor or patient, or passive, i.e., are part of the system that should be modelled but that don't have explicit behaviour like a waiting room with a given capacity, but that doesn't actually have defined actions.

The goal is to identify everything that is involved in a meaningful way in all of the activities that are important to the system.
Thinking about the inputs and outputs can also be useful.
Clearly the entities must be influenced in some way by the inputs, and they must themselves influence the outputs.
You may also consider that an activity does not have a significant influence on the performance of the system, and decide to exclude it -- and therefore any entities that are involved only in that activity.
Likewise the participation of a particular entity in an activity might be deemed inconsequential and therefore excluded.

### Drawing Behavioural Paths

Once preliminary identification of identities has been done, behavioural paths for each of the active entities should be drawn.
These are essentially flowcharts with a special structure.
Circles represent events, usually used when entities are arriving and leaving.
Rectangles represent activities, including when entities have to wait for another activity.
Red squares at the top left of an activity (or sometimes an event) let us know that some logic is triggered when the activity starts.
This generally occurs at the start of "wait" activities and is used to check whether the conditions that mean the entity can stop waiting and move on to the next activity are met.

What we are trying to do when drawing the behavioural paths is identify the activities and events that the entities participate in, the possible orders that these can occur in, and any points where some control logic needs to be used.

Both when identifying the entities and drawing the behavioural paths it is important to keep track of any assumptions and simplifications that you make.

<!-- ![Figure 1 is a separate TikZ file](figures/figure1.tex) -->

<!-- ``` {.tikz}

\begin{tikzpicture}
\draw (-2,0) -- (2,0);
\draw (-2,-2) .. controls (0,0) .. (2,-2);
\draw (-2,2) .. controls (-1,0) and (1,0) .. (2,2);
\end{tikzpicture}

``` -->