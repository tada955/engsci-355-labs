[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ENGSCI 355 Labs",
    "section": "",
    "text": "Preface\nThese are an online version of the Labs for ENGSCI 355. The topics covered are: a hands-on simulation of a manufacturing process; conceptual modelling using HCCM; implementing HCCM models in Jaamsim; and missing data imputaton.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html",
    "href": "chapters/hands_on_production/hands_on_production.html",
    "title": "1  Operations System in Practice",
    "section": "",
    "text": "1.1 Making Paper Cars\nThe system that we will use as an example is making a car out of paper. You will each be given a piece of paper with the net of paper car on it as in Figure 1.1.\nYou will also get a pair of scissors, some tape, and blank pieces of paper. To make the car:\nFigure 1.2 shows an example of a completed car.\nFirst everyone should make one car by themselves. Once you have, show one of the instructors to get signed off. Then, discuss with you group how you can work together to make paper cars. You might want to experiment with different setups/policies and try making a few cars to see how long it takes and gather some data.\nThere will be a competition to see which group can make the most cars in 10 minutes. Before the time starts each group must submit an estimate of how many cars they believe they will be able to make. The score for each group will then be comprised of the following elements:\nAdditionally, the following rules must be followed:",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html#making-paper-cars",
    "href": "chapters/hands_on_production/hands_on_production.html#making-paper-cars",
    "title": "1  Operations System in Practice",
    "section": "",
    "text": "Figure 1.1: The Net Used to Make Paper Cars\n\n\n\n\nTrace the net onto a new piece of paper.\nCut the new net out.\nFold the paper and tape the edges shut placing the tabs on the inside.\n\n\n\n\n\n\n\n\n\nFigure 1.2: A Completed Car\n\n\n\n\n\n1 point for each car completed up to and including the estimated number.\n0.25 points for each car completed above the estimated number.\n-0.75 points for each car not completed in the estimated number.\n\n\n\nEach car must be traced and cut individually.\nCars must be the same shape as the original template, including tabs.\nYou can have as many stencils as you like.\nAll final cars must have started as a blank, unfolded piece of paper.\nYou may not have any pre-cut tape or nets.\nAll cars must have been made only by members of your group.\nAll cars must be folded and taped neatly to count. The lecturer has final say on whether a car meets the required neatness.",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html#reflections",
    "href": "chapters/hands_on_production/hands_on_production.html#reflections",
    "title": "1  Operations System in Practice",
    "section": "1.2 Reflections",
    "text": "1.2 Reflections\nNow that you have attempted to make as many cars as you can you may wish to reflect on the process by asking yourself the following questions:\n\nDid your group have any traced/cut out cars left at the end?\nWhat was the bottleneck/slowest part of the system?\nDid you collect any data/do any experiments? If so, did they help? Would you do more/different ones now?\nWhat would you do differently next time?\n\nThe process that we considered was relatively simple. Cinsider how would your group’s strategy change if any of the following additional conditions were added:\n\nBlank pieces of paper for you to trace onto only become available one at a time every two minutes;\nYou have to make different styles of cars on demand;\nThere is a limit to how many traced nets/cut pieces of tape you can have at any point (buffer limit);\nEach time a pair of scissors is stopped being used there is a cooldown time of 1 minute.",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_3/clinic_3.html",
    "href": "chapters/clinic_3/clinic_3.html",
    "title": "2  Using Traces and Scenarios",
    "section": "",
    "text": "2.1 Jaamsim Model\nTo run the simulation from a data trace we need to make some changes to the Jaamsim model. Once again create a new folder called RC3 and copy your .cfg file (and the .png files so that the graphics work) from the previous lab folder into this folder and rename it to radiology_lab_trace.cfg. First, download the RC_50_week_data.txt file from Canvas. This file contains 50 weeks of data of patients at the radiology clinic including: the time the patient arrived, the priority of the patient, the time the patient took to check in, and the time the patient took to have their scan.\nBefore we load the data in we will first change the starting date of the simulation, which defaults to 1970, to instead be 2024, so that the data read from the file is interpreted correctly. To do this go to the Simulation object and under the Options tab enter 2024-01-01 for the StartDate.\nTo use the data in Jaamsim we use a FileToMatrix object found in the Basic Objects palette. Create a FileToMatrixObject, rename it PatientData, and select the RC_50_-week_data.txt file as the DataFile.\nWe can now access the data in the file by using the Value output of the PatientData object. The first place we will use this data is in the PatientArrival object, so that patients arrive according to the data in the file, rather than the distribution used previously. We first create two CustomOutputs (under the options tab) on the PatientArrival object to make accessing the data easier. CustomOutputs are similar to attributes but they can be expressions (formulas) and are re-calculated at each time step in the simulation. The two outputs we create will correspond to the data for the patient that has just arrived (thisPatientData) and the patient that is going to arrive next (nextPatientData). We need both of these so that we can calculate the appropriate interarrival time between the patients.\nOnce we have created these outputs we use them in the InterArrivalTime, and AssignmentList of the PatientArrival.\nNote that in the AssignmentList we are assigning values from the data file to attributes on the patient entity for priority, check in time, and scan time. We will use these attributes later to determine how long those activities take (the priority attribute is already used in the PriorityBranch).\nTo avoid getting an error these attributes need to be added to the PatientEntity object. So update the AttributeDefinitionList of the PatientEntity to include checkInTime and scanTime as well as the current priority, all with a default of 0.\nWe now need to use the checkInTime and scanTime attributes to determine how long the check ins and scans take. Set the Duration of the CheckIn activity to this.CurrentParti-cipants(1).checkInTime * 1[min]. this.CurrentParticipants refers to the group of entities that have just started the activity (for check in this is a patient and a receptionist), and we use the index 1 as the patient comes first, then we access the checkInTime attribute. We then need to multiply this by 1[min] to convert the number into a time, and use minutes as the attribute is in minutes.\nSimilarly for the Scan activity set the Duration to this.CurrentParticipants(1).scanTime * 1[h], note that here we use 1[h] as the attribute is in hours.\nNow, suppose we are interested in the time that patients spend waiting for check in and for the scan. We can’t use the current PatientLogger as it only records the total time that patients are in the system for. We could add attributes for each time that we are interested in, and assign the value when the entity gets to the relevant stage, and then use the PatientLogger to log these attributes. We can instead use an EventLogger from the HCCM palette. The EventLogger records the time that an entity starts each of the activities that it participates in. So, create an EventLogger and call it PatientEventLogger.\nThen, to get the events recorded go to the PatientLeave object and under the HCCM tab enter PatientEventLogger for the EventLogger keyword. Now any entities that are sent to the patient leave will have the start times of any activities that they participated in recorded.\nWe will now configure the Simulation object to run one long replication for several scenarios. Under the Key Inputs tab enter 50w for the RunDuration, this will make the simulation run for 50 weeks. We have to run one 50 week replication rather than 50 one week replications as Jaamsim cannot read in a new file when each replication starts.\nWe want to try out four scenarios with either three or four CT machines, and either one or two receptionists. As there are two factors we are changing we use a ScenarioIndex with two numbers, the first indexes the scenarios relating to the number of CT Machines, and the second those related to the number of receptionists.\nSince there are two options for the first index and two for the second we enter 2 2 for the ScenarioIndexDefinitionList under the MultipleRuns tab of the Simulation object. We will start from scenario 1 and end at scenario 2 in both the indices so StartingScenarioNumber is 1-1 and EndingScenarioNumber is 2-2. We are going to run just one long replication for each scenario so set the NumberOfReplications to 1.\nNow Jaamsim will run 4 scenarios, but we need to make it so that the number of CT Machines and Receptionists actually changes in each of the scenarios. For the CT Machines we set the MaxNumber on the CTMachineArrival to [Simulation].ScenarioIndex(1) + 2, which gets the value of the first scenario index and adds 2 to it. For the Receptionists we can set the MaxNumber on the ReceptionistArrival to [Simulation].ScenarioIndex(2), in this case we don’t need to add one as the scenario index is the same as the number of receptionists we want to use.\nDownload and run the RadiologyLabTraceAnalysis.R file, you will have to update the directory that it reads the data from and the name of the data file used. The script splits each replication into 50 batches, each one week long, and calculates the mean across the batches and the four scenarios of the 90th percentile waiting time for both check in and scan within each of batch. No warm-up period is used, so this assumes that being empty and idle is a typical state of the system. Splitting into batches by week assumes that each week is not correlated to the preceding and following weeks. You should get the following output:",
    "crumbs": [
      "Jaamsim Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Traces and Scenarios</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_3/clinic_3.html#jaamsim-model",
    "href": "chapters/clinic_3/clinic_3.html#jaamsim-model",
    "title": "2  Using Traces and Scenarios",
    "section": "",
    "text": "Table 2.1: Update PatientArrival\n\n\n\n\n\nObject\nKeyword\nValue\n\n\n\n\nPatientArrival\nCustomOutputList\n{ thisPatientData ‘[PatientData].Value(this.NumberAdded + 1)’ }\n\n\n\n\n{ nextPatientData ‘[PatientData].Value(this.NumberAdded + 2)’ }\n\n\n\nFirstArrivalTime\n[PatientData].Value(2)(2)\n\n\n\nInterArrivalTime\n‘this.nextPatientData(2) - this.thisPatientData(2)’\n\n\n\nAssignmentList\n{ ‘this.obj.priority= this.thisPatientData(3)’ }\n\n\n\n\n{ ‘this.obj.checkInTime= this.thisPatientData(4)’ }\n\n\n\n\n{ ‘this.obj.scanTime= this.thisPatientData(5)’ }",
    "crumbs": [
      "Jaamsim Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Using Traces and Scenarios</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html",
    "href": "chapters/paper_car_cm/paper_car_cm.html",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "",
    "text": "3.1 Understanding of the Problem Situation\nIn the box below write a problem description for making paper cars, think about what you are trying to solve/discover by simulating this activity. You may want to look at Chapter 1 again to remind yourself about the process.",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#modelling-objectives",
    "href": "chapters/paper_car_cm/paper_car_cm.html#modelling-objectives",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.2 Modelling Objectives",
    "text": "3.2 Modelling Objectives\nIn the box below write the modelling objectives for making paper cars, i.e., what are you trying to discover using simulation?",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#general-objectives",
    "href": "chapters/paper_car_cm/paper_car_cm.html#general-objectives",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.3 General Objectives",
    "text": "3.3 General Objectives\nIn the box below write the general objectives for making paper cars, i.e., what are some of the general properties you’d like your simulation to have?",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#defining-output-responses",
    "href": "chapters/paper_car_cm/paper_car_cm.html#defining-output-responses",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.4 Defining Output Responses",
    "text": "3.4 Defining Output Responses\nIn the box below write the output responses for making paper cars, i.e., what are you going to measure to determine the performance of the system?",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#defining-input-factors",
    "href": "chapters/paper_car_cm/paper_car_cm.html#defining-input-factors",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.5 Defining Input Factors",
    "text": "3.5 Defining Input Factors\nIn the box below write the input factors for making paper cars, i.e., what are you going to change to achieve the modelling objectives?",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#identifying-entities",
    "href": "chapters/paper_car_cm/paper_car_cm.html#identifying-entities",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.6 Identifying Entities",
    "text": "3.6 Identifying Entities\nIn the box below list the entities for making paper cars.",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/paper_car_cm/paper_car_cm.html#drawing-behavioural-paths",
    "href": "chapters/paper_car_cm/paper_car_cm.html#drawing-behavioural-paths",
    "title": "3  Making Paper Cars Conceptual Model",
    "section": "3.7 Drawing Behavioural Paths",
    "text": "3.7 Drawing Behavioural Paths\nThe activity diagrams for the pencil & template, and scissors are given below in Figures 3.1, and 3.2.\n\n\n\n\n\n\nFigure 3.1: Pencil Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 3.2: Scissors Activity Diagram\n\n\n\n\nIn the boxes below draw the activity diagrams for the remaining entities.",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Making Paper Cars Conceptual Model</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html",
    "title": "4  Radiology Clinic",
    "section": "",
    "text": "4.1 Data",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#data",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#data",
    "title": "4  Radiology Clinic",
    "section": "",
    "text": "Table 4.1: List of Global Variables\n\n\n\n\n\nName\nDescription\nInitial Value\n\n\n\n\nNextPatIdNum\nThe Id number that will be assigned to the next patient\n1\n\n\nNextReceptionistIdNum\nThe Id number that will be assigned to the next receptionist\n1\n\n\nNextCTMachineIdNum\nThe Id number that will be assigned to the next CT Machine\n1\n\n\n\\(P\\)\nThe set of all patients\n\\(\\emptyset\\)\n\n\n\\(R\\)\nThe set of all receptionists\n\\(\\emptyset\\)\n\n\n\\(C\\)\nThe set of all CT Machines\n\\(\\emptyset\\)\n\n\n\n\n\n\n\n\n\nTable 4.2: List of Data Modules\n\n\n\n\n\nName\nSource\nIdentification\nInput\nOutput\n\n\n\n\nPatientInterarrivalTime\nPoisson Process\nParameter\nMean interarrival time\nSample from Distribution\n\n\nNumReceptionists\nConstant\nParameter\nN/A\nValue\n\n\nNumCTMachines\nConstant\nParameter\nN/A\nValue\n\n\nCheckInTime\nUniform Distribution\nParameter\nMin and max time\nSample from Distribution\n\n\nScanTime\nLog-normal Distribution\nParameter\nMean and std. dev.\nSample from Distribution",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#components",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#components",
    "title": "4  Radiology Clinic",
    "section": "4.2 Components",
    "text": "4.2 Components\n\n\n\nTable 4.3: List of Entities\n\n\n\n\n\nEntity\nAttributes\n\n\n\n\nPatient\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\nReceptionist\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\nCT Machine\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\n\n\n\nTable 4.4: List of Transitions\n\n\n\n\n\nNo.\nParticipant\nFrom Event\nTo Event\n\n\n\n\n1\nPatient\nArrive(P)\nWait for check in.Start\n\n\n2\nPatient\nWait for check in.End\nCheck in.Start\n\n\n3\nPatient\nCheck in.End\nWait for scan.Start\n\n\n4\nPatient\nWait for scan.End\nScan.Start\n\n\n5\nPatient\nScan.End\nLeave(P)\n\n\n6\nReceptionist\nArrive(R)\nWait for task(R).Start\n\n\n7\nReceptionist\nWait for task(R).End\nCheck in.Start\n\n\n8\nReceptionist\nCheck in.End\nWait for task(R).Start\n\n\n9\nReceptionist\nWait for task(R).End\nLeave(R)\n\n\n10\nCT Machine\nArrive(CT)\nWait for task(CT).Start\n\n\n11\nCT Machine\nWait for task(CT).End\nScan.Start\n\n\n12\nCT Machine\nScan.End\nWait for task(CT).Start\n\n\n13\nCT Machine\nWait for task(CT).End\nLeave(CT)\n\n\n\n\n\n\n\n\n\nTable 4.5: Activities\n\n\n\n\n\nActivity\nParticipants\nEvent\nType\nState Change\n\n\n\n\nWait for Check In\nPatient (p)\nStart\nScheduled\nTRIGGER OnStartWaitForCheckIn WITH p\n\n\n\n\nEnd\nControlled\n\n\n\nCheck In\nPatient (p), Receptionist (r)\nStart\nControlled\nSCHEDULE Check In.End at TIME + CheckInTime()\n\n\n\n\nEnd\nScheduled\nSTART Wait for Scan WITH p\nSTART Wait for Task (R) WITH r\n\n\nWait for Scan\nPatient (p)\nStart\nScheduled\n\n\n\n\n\nEnd\nControlled\nTRIGGER OnStartWaitForScan WITH p\n\n\nScan\nPatient (p), CTMachine (c)\nStart\nControlled\nSCHEDULE Scan.End at TIME + ScanTime()\n\n\n\n\nEnd\nScheduled\nSTART Leave (P) WITH p\nSTART Wait for Task (CT) WITH c\n\n\nWait for Task (R)\nReceptionist (r)\nStart\nScheduled\nTRIGGER OnStartWaitForTaskR WITH r\n\n\n\n\nEnd\nControlled\n\n\n\nWait for Task (CT)\nCTMachine (c)\nStart\nScheduled\nTRIGGER OnStartWaitForTaskCT WITH c\n\n\n\n\nEnd\nControlled\n\n\n\n\n\n\n\n\n\n\nTable 4.6: Events\n\n\n\n\n\nActivity\nParticipants\nType\nState Change\n\n\n\n\nSimulation Start\n-\nScheduled\nSCHEDULE Arrival (R) at TIME\nSCHEDULE Arrival (CT) at TIME\nSCHEDULE Arrival (P) at TIME + PatientInterArrival()\n\n\nArrival (P)\nPatient (p)\nScheduled\np.ID = NextPatIDNum\np.Priority = PatientPriority()\nNextPatIDNum = NextPatIDNum + 1\nSCHEDULE Arrival (P) at TIME + PatientInterArrival()\nSTART Wait for Check In WITH p\n\n\nLeave (P)\nPatient (p)\nScheduled\nCalculate statistics for p\n\n\nArrival (R)\nReceptionist (r)\nScheduled\nr.ID = NextReceptionistIDNum\nNextReceptionistIDNum = NextReceptionistIDNum + 1\nIF NextReceptionistIDNum &lt;= NumReceptionists THEN\n    SCHEDULE Arrival (R) at TIME\nEND IF\nSTART Wait for Task (R) WITH r\n\n\nLeave (R)\nReceptionist (r)\nScheduled\nCalculate statistics for r\n\n\nArrival (CT)\nCTMachine (c)\nScheduled\nc.ID = NextCTMachineIDNum\nNextCTMachineIDNum = NextCTMachineIDNum + 1\nIF NextCTMachineIDNum &lt;= NumCTMachines THEN\n    SCHEDULE Arrival (CT) at TIME\nEND IF\nSTART Wait for Task (CT) WITH c\n\n\nLeave (P)\nCTMachine (c)\nScheduled\nCalculate statistics for c",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#activity-diagrams",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#activity-diagrams",
    "title": "4  Radiology Clinic",
    "section": "4.3 Activity Diagrams",
    "text": "4.3 Activity Diagrams\n\n\n\n\n\n\nFigure 4.1: Patient Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 4.2: Receptionist Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 4.3: CT Activity Diagram",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#control-policies",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#control-policies",
    "title": "4  Radiology Clinic",
    "section": "4.4 Control Policies",
    "text": "4.4 Control Policies\n\n\n\nTable 4.7: OnStartWaitForCheckIn\n\n\n\n\n\n\nTriggered by: Patient p\n\n\n\n\n\nreceps = {r FOR r IN R IF r.State = \"Wait for task (R)\"}\nIF receps IS NOT empty THEN \n    r_hat = argmin{r.CurrentStart FOR r IN receps}\n    START Check In WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 4.8: OnStartWaitForScan\n\n\n\n\n\n\nTriggered by: Patient p\n\n\n\n\n\ncts = {c FOR c IN C IF c.State = \"Wait for task (C)\"}\nIF cts IS NOT empty THEN \n    c_hat = argmin{c.CurrentStart FOR c IN cts}\n    START Scan WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 4.9: OnStartWaitForTaskR\n\n\n\n\n\n\nTriggered by: Receptionist r\n\n\n\n\n\npatients = {p FOR p IN P IF p.State = \"Wait for Check In\"}\nIF patients IS NOT empty THEN \n    p_hat = argmin{p.CurrentStart FOR p IN patients}\n    START Check In WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 4.10: OnStartWaitForTaskCT\n\n\n\n\n\n\nTriggered by: CTMachine c\n\n\n\n\n\npatients = {p FOR p IN P IF p.State = \"Wait for Scan\"}\nIF patients IS NOT empty THEN \n    p_hat = argmin{p.CurrentStart FOR p IN patients}\n    START Scan WITH p, r_hat\nEND IF",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  }
]