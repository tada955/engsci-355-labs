[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ENGSCI 355 Labs",
    "section": "",
    "text": "Preface\nThese are an online version of the Labs for ENGSCI 355. The topics covered are: a hands-on simulation of a manufacturing process; conceptual modelling using HCCM; implementing HCCM models in Jaamsim; and missing data imputaton.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html",
    "href": "chapters/hands_on_production/hands_on_production.html",
    "title": "1  Operations System in Practice",
    "section": "",
    "text": "1.1 Making Paper Cars\nThe system that we will use as an example is making a car out of paper. You will each be given a piece of paper with the net of paper car on it as in Figure 1.1.\nYou will also get a pair of scissors, some tape, and blank pieces of paper. To make the car:\nFigure 1.2 shows an example of a completed car.\nFirst everyone should make one car by themselves. Once you have, show one of the instructors to get signed off. Then, discuss with you group how you can work together to make paper cars. You might want to experiment with different setups/policies and try making a few cars to see how long it takes and gather some data.\nThere will be a competition to see which group can make the most cars in 10 minutes. Before the time starts each group must submit an estimate of how many cars they believe they will be able to make. The score for each group will then be comprised of the following elements:\nAdditionally, the following rules must be followed:",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html#making-paper-cars",
    "href": "chapters/hands_on_production/hands_on_production.html#making-paper-cars",
    "title": "1  Operations System in Practice",
    "section": "",
    "text": "Figure 1.1: The Net Used to Make Paper Cars\n\n\n\n\nTrace the net onto a new piece of paper.\nCut the new net out.\nFold the paper and tape the edges shut placing the tabs on the inside.\n\n\n\n\n\n\n\n\n\nFigure 1.2: A Completed Car\n\n\n\n\n\n1 point for each car completed up to and including the estimated number.\n0.25 points for each car completed above the estimated number.\n-0.75 points for each car not completed in the estimated number.\n\n\n\nEach car must be traced and cut individually.\nCars must be the same shape as the original template, including tabs.\nYou can have as many stencils as you like.\nAll final cars must have started as a blank, unfolded piece of paper.\nYou may not have any pre-cut tape or nets.\nAll cars must have been made only by members of your group.\nAll cars must be folded and taped neatly to count. The lecturer has final say on whether a car meets the required neatness.",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/hands_on_production/hands_on_production.html#reflections",
    "href": "chapters/hands_on_production/hands_on_production.html#reflections",
    "title": "1  Operations System in Practice",
    "section": "1.2 Reflections",
    "text": "1.2 Reflections\nNow that you have attempted to make as many cars as you can you may wish to reflect on the process by asking yourself the following questions:\n\nDid your group have any traced/cut out cars left at the end?\nWhat was the bottleneck/slowest part of the system?\nDid you collect any data/do any experiments? If so, did they help? Would you do more/different ones now?\nWhat would you do differently next time?\n\nThe process that we considered was relatively simple. Cinsider how would your group’s strategy change if any of the following additional conditions were added:\n\nBlank pieces of paper for you to trace onto only become available one at a time every two minutes;\nYou have to make different styles of cars on demand;\nThere is a limit to how many traced nets/cut pieces of tape you can have at any point (buffer limit);\nEach time a pair of scissors is stopped being used there is a cooldown time of 1 minute.",
    "crumbs": [
      "Practical Lab",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Operations System in Practice</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html",
    "href": "chapters/hccm_framework/hccm_framework.html",
    "title": "2  HCCM Framework",
    "section": "",
    "text": "2.1 Understanding of the Problem Situation\nIn Phase 1, in order to understand the problem situation, you need to summarise what is happening in a concise way. There is no strict rule for the best way to do this. One good approach is listening to the problem “holder”, i.e., person/people who have the problem such as a client, then reflecting what you have heard in a couple of paragraphs with lists of key details and questions. You can then work through one or more iterations of feedback and refinement to get a final, agreed upon problem description.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html#identification-of-modelling-and-general-objectives",
    "href": "chapters/hccm_framework/hccm_framework.html#identification-of-modelling-and-general-objectives",
    "title": "2  HCCM Framework",
    "section": "2.2 Identification of Modelling and General Objectives",
    "text": "2.2 Identification of Modelling and General Objectives\nFor Phase 2, as described in lectures, there are two types of objectives to consider when developing a simulation:\n\n“The second step deals with the determination of the objectives. According to Robinson [26] they drive all aspects of the modeling process and are a subset of an organization’s aims. Further, objectives can be classified into modeling and general objectives, where the latter are concerned with the flexibility, run-speed, visual-display and model/component reuse.”\n\nFor the modelling objective you may like to think about what you trying to discover using simulation, and what level of performance you are trying to achieve in which areas/metrics.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html#defining-output-responses",
    "href": "chapters/hccm_framework/hccm_framework.html#defining-output-responses",
    "title": "2  HCCM Framework",
    "section": "2.3 Defining Output Responses",
    "text": "2.3 Defining Output Responses\nPhase 3 includes defining both the output responses and input factors. You can do these in either order, but it can often be useful to define the output responses first, as it may help you think about what inputs will influence the outputs.\nOutput responses are things that can be measured and compared to understand how a system has behaved/performed. They are the metrics used to compare different simulation scenarios. The output responses should let you know whether the modelling objectives have been achieved and why or how. You may also want to consider how this will be reported (tables, graphs, etc.).",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html#defining-input-factors",
    "href": "chapters/hccm_framework/hccm_framework.html#defining-input-factors",
    "title": "2  HCCM Framework",
    "section": "2.4 Defining Input Factors",
    "text": "2.4 Defining Input Factors\nInput factors are things that can be changed and may modify how a system behaves/performs. They are often defined to create multiple different scenarios to compare via simulation. They are also what you can change to try and achieve the modelling objectives.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html#model-content",
    "href": "chapters/hccm_framework/hccm_framework.html#model-content",
    "title": "2  HCCM Framework",
    "section": "2.5 Model Content",
    "text": "2.5 Model Content\nIn Phase 4 the model content is defined. There is no strict order in which you need to complete the four components (structre, behaviour, data, and logic). A possible approach, that we will take in this lab, is to:\n\nIdentify the entities;\nDraw the behavioural paths;\nDefine the data;\nDefine the structure (including the entities again);\nDefine the logic.\n\nUsing this approach you may still find yourself deciding to add/remove parts that you have already defined. This is a normal part of the conceptual modelling process, and you need to go back to the part of the process you want to change – for example adding and entity or activity – and then update the rest of the CM.\nFor the model content definition of our conceptual model we will follow the new HCCM standard. This standard is presented in an academic article (currently under review) that is available on Canvas under Files &gt; Lectures &gt; Conceptual Modelling in the file hccm-standard.pdf\n\n2.5.1 Identifying Entities\nBefore formally defining entities it is often useful to identify entities in the system and whether they are active, i.e., have behaviour like a doctor or patient, or passive, i.e., are part of the system that should be modelled but that don’t have explicit behaviour like a waiting room with a given capacity, but that doesn’t actually have defined actions.\nThe goal is to identify everything that is involved in a meaningful way in all of the activities that are important to the system. Thinking about the inputs and outputs can also be useful. Clearly the entities must be influenced in some way by the inputs, and they must themselves influence the outputs. You may also consider that an activity does not have a significant influence on the performance of the system, and decide to exclude it – and therefore any entities that are involved only in that activity. Likewise the participation of a particular entity in an activity might be deemed inconsequential and therefore excluded. Although it is possible to revisit and add/remove entities later, at this stage you want to consider the whole system carefully, as it is easier to include/exclude an entity now than to change it later.\n\n\n2.5.2 Drawing Behavioural Paths\nOnce preliminary identification of entities has been done, behavioural paths for each of the active entities should be drawn. These are essentially flowcharts with a special structure. Circles represent events, usually used when entities are arriving and leaving. Rectangles represent activities, including when entities have to wait for another activity. Red squares at the top left of an activity (or sometimes an event) let us know that some logic is triggered when the activity starts. This generally occurs at the start of “wait” activities and is used to check whether the conditions that mean the entity can stop waiting and move on to the next activity are met.\nWhat we are trying to do when drawing the behavioural paths is identify the activities and events that the entities participate in, the possible orders that these can occur in, and any points where some control logic needs to be used.\nBoth when identifying the entities and drawing the behavioural paths it is important to keep track of any assumptions and simplifications that you make.\n\n\n2.5.3 Define the Data\nThe data for the conceptual model includes both variables, and data modules. Variables can change their value throughout the simulation and are generally used to store some information temporarily before it is required later in the simulation. Data modules contain the information that is needed to perform the simulation and can be collected beforehand. Data mocules can also represent the input/experimental factors – the things that may change between different simulation scenarios. For each data module the following information should be given:\n\nThe name of the data module;\nThe source of the data, where the information was obtained;\nThe way the data is modelled, is it represented by a constant, a distribution, etc.\nWhether the output is deterministic or stochastic;\nThe inputs that the module requires;\nThe quantity that the module outputs.\n\nWhen presenting a conceptual model is useful to put the data first, as it is often referenced throughout the rest of the conceptual model.\n\n\n2.5.4 Define the Structure\nTo define the structure we start with formally defining the entities by listing them along with any attributes that they have. Some common attributes, such as ID number and the activity that the entity is currently participating in, are often omitted to avoid repitition. Attributes are usually included either to assist with the system behaviour – for example record whether a patient has had a test – or to capture the perfomance of the system – how long something has waited for.\nNext we define the transitions. Each arrow on a behavioural diagram corresponds to a transition. We can collate these in a table describing: the entity that is performing the transition, and the events that the entity transitions from and to. You can simply number them starting from 1, or adopt a convention of using the entity’s initial as a prefix.\nOnce the transitions have been defined we can define the activities and events. Usually these are presented in two tables, one for the activities and one for the events. For each event (either standalone or as part of an activity) the table should include:\n\nThe participant(s);\nThe type – either scheduled or controlled;\nThe state changes that occur when the event happens.\n\nThe main things that occur in state changes are:\n\nSchedule an end event – usually in the start event of an activity with a scheduled end event;\nStarting another activity/event – this usually happens in a scheduled end event where an entity is transitioning to another scheduled event;\nTrigger some logic – often in the start event of an activity with a controlled end event.\n\nThe simulation start event, and arrive events are often more complicated and involve scheduling the initial events and creating entities.\n\n\n2.5.5 Define the Logic\nThe final part of the conceptual model content is the logic. Each trigger that you drew in a behvioural path (the red squares) should correspond first to a trigger statement in the state changes of an event, and a piece of logic defined here. These pieces of logic are used to determine how the system behaves – what activity an entity should do next. It is common to have logic control the behaviour when one entity needs to wait for another, as when the first entity arrives it needs to check whether the other is free to perform an activity with it. The logic is usually presented as pseudocode, alongside the entity that triggers the logic.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/hccm_framework/hccm_framework.html#assumptions-and-simplifications",
    "href": "chapters/hccm_framework/hccm_framework.html#assumptions-and-simplifications",
    "title": "2  HCCM Framework",
    "section": "2.6 Assumptions and Simplifications",
    "text": "2.6 Assumptions and Simplifications\nThroughout the four phases of the HCCM framework you should document the assumptions and simplifications that you make. Assumptions are related to uncertainties about the system being modelled, and are used to fill in gaps in the information that is required for the simulation. Simplifications are changes that are made to the model to make it easier to defined or implement.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HCCM Framework</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "",
    "text": "3.1 Understanding of the Problem Situation\nIn the box below write a problem description for making paper cars, think about what you are trying to solve/discover by simulating this activity. You may want to look at Chapter 1 again to remind yourself about the process.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#modelling-objectives",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#modelling-objectives",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.2 Modelling Objectives",
    "text": "3.2 Modelling Objectives\nIn the box below write the modelling objectives for making paper cars, i.e., what are you trying to discover using simulation?",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#general-objectives",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#general-objectives",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.3 General Objectives",
    "text": "3.3 General Objectives\nIn the box below write the general objectives for making paper cars, i.e., what are some of the general properties you’d like your simulation to have?",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#defining-output-responses",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#defining-output-responses",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.4 Defining Output Responses",
    "text": "3.4 Defining Output Responses\nIn the box below write the output responses for making paper cars, i.e., what are you going to measure to determine the performance of the system?",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#defining-input-factors",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#defining-input-factors",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.5 Defining Input Factors",
    "text": "3.5 Defining Input Factors\nIn the box below write the input factors for making paper cars, i.e., what are you going to change to achieve the modelling objectives?",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#identifying-entities",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#identifying-entities",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.6 Identifying Entities",
    "text": "3.6 Identifying Entities\nIn the box below list the entities for making paper cars.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_io_behaviour/cm_io_behaviour.html#drawing-behavioural-paths",
    "href": "chapters/cm_io_behaviour/cm_io_behaviour.html#drawing-behavioural-paths",
    "title": "3  Inputs, Outputs, and Behaviour",
    "section": "3.7 Drawing Behavioural Paths",
    "text": "3.7 Drawing Behavioural Paths\nThe activity diagrams for the pencil & template, and scissors are given below in Figures 3.1, and 3.2.\n\n\n\n\n\n\nFigure 3.1: Pencil Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 3.2: Scissors Activity Diagram\n\n\n\n\nIn the boxes below draw the activity diagrams for the remaining entities.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Inputs, Outputs, and Behaviour</span>"
    ]
  },
  {
    "objectID": "chapters/cm_data_structure_logic/cm_data_structure_logic.html",
    "href": "chapters/cm_data_structure_logic/cm_data_structure_logic.html",
    "title": "4  Data, Structure, and Logic",
    "section": "",
    "text": "4.1 Define the Data\nFirstly, you need to give detailed definitions of the data modules. You may not have collected data during car making, but complete the following table that describes the kind of data you would need to collect to simulate car making. Also add a comment on how the entry for CutTapeDuration would change if no person-by-person data was available, but an Exponential distribution that estimated the time it takes for a person to cut tape was available.",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data, Structure, and Logic</span>"
    ]
  },
  {
    "objectID": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-data",
    "href": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-data",
    "title": "4  Data, Structure, and Logic",
    "section": "",
    "text": "Table 4.1: List of Data Modules\n\n\n\n\n\nName\nSource\nModel\nType\nInput\nOutput\n\n\n\n\nNumPencils\nSystem info\nConstant\nDeterministic\n-\nThe number of pencils available\n\n\nNumScissors\nSystem info\nConstant\nDeterministic\n-\nThe number of scissors available\n\n\nNumTape\nSystem info\nConstant\nDeterministic\n-\nThe number of rolls of tape available\n\n\nNum\nSystem info\nConstant\nDeterministic\n-\n\n\n\n\n\n\n\n\n\n\n\nTraceCar\nExperimental data\nLookup\nDeterministic\nPerson\nTime to trace car\n\n\nCutNet\nExperimental data\nLookup\nDeterministic\nPerson\nTime to cut the net out\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCutTape\nExperimental data\nLookup\nDeterministic\nPerson\nTime to cut a piece of tape",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data, Structure, and Logic</span>"
    ]
  },
  {
    "objectID": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-structure",
    "href": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-structure",
    "title": "4  Data, Structure, and Logic",
    "section": "4.2 Define the Structure",
    "text": "4.2 Define the Structure\nThe first part of the structure to define is the entities. Table 4.2 lists the entities again, but adds attributes that the entities will need to capture the performance of the system, e.g., waiting time until the cube was cut. It is assumed that all entities have the three attributes: ID, CurrentActivity, and CurrentStart. These are omitted in the table to prevent repetition.\n\n\n\nTable 4.2: List of Entities\n\n\n\n\n\nEntity\nAttributes\n\n\n\n\nPaper\nWaitForTrace[0.0]\n\n\n\nWaitForCutShape[0.0]\n\n\n\nWaitForFold[0.0]\n\n\n\nWaitForTapeCube[0.0]\n\n\n\n\n\n\nPencil\nWaitForTrace[0.0]\n\n\n\n\n\n\nScissors\nWaitForTask[0.0]\n\n\n\n\n\n\nTape\nWaitForCut[0.0]\n\n\n\n\n\n\nTapePieces\nWaitForTape[0.0]\n\n\n\nArrivalTime[0.0]\n\n\n\nLeavingTime[0.0]\n\n\nPerson\nWaitForTask[0.0]\n\n\n\n\n\n\nThe next part of the structure is the transitions, which describe how entities move between activities and events. Table 4.3 lists the transitions for making paper cars. These transitions are prefixed by entity of the behavioural pathway they come from. Complete the transitions for the Scissors pathway.\n\n\n\nTable 4.3: List of Transitions\n\n\n\n\n\n\nParticipant\nName\nFrom Event\nTo Event\n\n\n\n\nPaper\nP.1\nPaper Created\nPaper Wait for Trace.Start\n\n\n\nP.2\nPaper Wait for Trace.End\nTrace Car.Start\n\n\n\nP.3\nTrace Car.End\nPaper Wait for Cut Net.Start\n\n\n\nP.4\nPaper Wait for Cut Net.End\nCut Car Net.Start\n\n\n\nP.5\nCut Car Net.End\nCar Wait for Fold.Start\n\n\n\nP.6\nCar Wait for Fold.End\nFold Car.Start\n\n\n\nP.7\nFold Car.End\nCar Wait for Tape.Start\n\n\n\nP.8\nCar Wait for Tape.End\nTape Car.Start\n\n\n\nP.9\nTape Car.End\nCar Finished\n\n\n\n\n\n\n\n\nPencil\nN.1\nPencil/Template Created\nPencil Wait for Trace.Start\n\n\n\nN.2\nPencil Wait for Trace.End\nTrace Car.Start\n\n\n\nN.3\nTrace Car.End\nPencil Wait for Trace.Start\n\n\n\n\n\n\n\n\nScissors\nS.1\nScissors Created\n\n\n\n\nS.2\n\n\n\n\n\nS.3\n\n\n\n\n\nS.4\n\n\n\n\n\nS.5\n\n\n\n\n\n\n\n\n\n\nTape\nT.1\nTape Created\nTape Wait for Cut.Start\n\n\n\nT.2\nTape Wait for Cut.End\nCut Tape.Start\n\n\n\nT.3\nCut Tape.End\nTape Wait for Cut.Start\n\n\n\n\n\n\n\n\nTape Piece\nTP.1\nTape Pieces Created\nTape Pieces Wait for Tape.Start\n\n\n\nTP.2\nTape Pieces Wait for Tape.End\nTape Car.Start\n\n\n\nTP.3\nTape Car.End\nTape Pieces Leave\n\n\n\n\n\n\n\n\nPerson\nH.1\nPerson Created\nPerson Wait for Task.Start\n\n\n\nH.2\nPerson Wait for Task.End\nTrace Car.Start\n\n\n\nH.3\nTrace Car.End\nPerson Wait for Task.Start\n\n\n\nH.4\nPerson Wait for Task.End\nCut Car Net.Start\n\n\n\nH.5\nCut Car Net.End\nPerson Wait for Task.Start\n\n\n\nH.6\nPerson Wait for Task.End\nFold Car.Start\n\n\n\nH.7\nFold Car.End\nPerson Wait for Task.Start\n\n\n\nH.8\nPerson Wait for Task.End\nCut Tape.Start\n\n\n\nH.9\nCut Tape.End\nPerson Wait for Task.Start\n\n\n\nH.10\nPerson Wait for Task.End\nTape Car.Start\n\n\n\nH.11\nTape Car.End\nPerson Wait for Task.Start\n\n\n\n\n\n\n\nTable 4.4 lists the activities from the behavioural pathway diagrams along with the state changes for the start and end event of each activity. Complete the activities for:\n\nCar Wait for Tape Car\nTape Car\nPerson Wait for Task (Hint look at Scissors Wait for Task)\n\n\n\n\nTable 4.4: Activities\n\n\n\n\n\n\nActivity\nParticipants\nEvent\nType\nState Change\n\n\n\n\nPaper Wait for Trace\nPaper (P)\nStart\nScheduled\n(Default, omitted hereafter) P.CurrentActivity = \"this activity\"\n(Default, omitted hereafter) P.CurrentStart = TIME\nTRIGGER OnStartPaperWaitForTrace WITH C\n\n\n\n\nEnd\nControlled\nP.WaitForTrace = TIME - P.CurrentStart\n# TRANSITION PAP.2 in logic\n\n\nTrace Car\nPaper (P), Person (H), Pencil (N)\nStart\nControlled\nSCHEDULE END at TIME + TraceCube(H)\n\n\n\n\nEnd\nScheduled\nSTART Paper Wait for Cut Net WITH P # TRANSITION PAP.3\nSTART Person Wait for Task WITH H # TRANSITION PER.3\nSTART Pencil Wait for Trace WITH N # TRANSITION PEN.3\n\n\nPaper Wait for Cut Net\n\nStart\n\nTRIGGER OnStartPaperWaitForCutNet WITH P\n\n\n\n\nEnd\n\nP.WaitForCutNet = TIME - P.CurrentStart\n# TRANSITION PAP.4 in logic\n\n\nCut Car Net\nPaper (P), Person (H), Scissors (S)\nStart\nControlled\nSCHEDULE END at TIME + CutNet(H)\n\n\n\n\nEnd\nScheduled\nSTART Car Wait for Fold WITH P # TRANSITION PAP.5\nSTART Person Wait for Task WITH H # TRANSITION PER.5\nSTART Scissors Wait for Task WITH S # TRANSITION S.3\n\n\nCar Wait for Fold\nPaper (P)\nStart\nScheduled\nTRIGGER OnStartCarWaitForFold WITH P\n\n\n\n\nEnd\nControlled\nP.WaitForFold = TIME - P.CurrentStart\n# TRANSITION PAP.6 in logic\n\n\nFold Car\nPaper (P), Person (H)\nStart\nControlled\nSCHEDULE END at TIME + FoldCar(H)\n\n\n\n\nEnd\nScheduled\nSTART Car Wait for Tape Car WITH P # TRANSITION PAP.7\nSTART Person Wait for Task WITH H # TRANSITION PER.7\n\n\nCar Wait for Tape Car\n\nStart\n\n \n\n\n\n\nEnd\n\n \n \n\n\nTape Car\n\nStart\n\n \n\n\n\n\nEnd\n\n \n \n \n\n\nPencil Wait for Trace\nPencil (N)\nStart\nScheduled\nTRIGGER OnStartPencilWaitForTrace WITH N\n\n\n\n\nEnd\nControlled\nN.WaitForTrace = N.WaitForTrace + TIME - N.CurrentStart\n# TRANSITION N.2 in logic\n\n\nScissors Wait for Task\nScissors (S)\nStart\nScheduled\nTRIGGER OnStartScissorsWaitForTask WITH S\n\n\n\n\nEnd\nControlled\nS.WaitForTask = S.WaitForTask + TIME - S.CurrentStart\n# TRANSITION S.2 or S.4 in logic\n\n\nCut Tape\nTape (T), Person (H), Scissors (S)\nStart\nControlled\nSCHEDULE END at TIME + CutTape(H)\n\n\n\n\nEnd\nScheduled\nSTART Person Wait for Task WITH H # TRANSITION PER.9\nSTART Scissors Wait for Task WITH S # TRANSITION S.5\nSTART Tape Wait for Cut WITH T # TRANSITION T.3\nCREATE Tape Pieces TP\nSTART Tape Pieces Created WITH TP\n\n\nTape Wait for Cut\nTape (T)\nStart\nScheduled\nTRIGGER OnStartTapeWaitForCut WITH T\n\n\n\n\nEnd\nControlled\nT.WaitForCut = T.WaitForCut + TIME - T.CurrentStart\n# TRANSITION T.2 in logic\n\n\nTape Pieces Wait for Tape\nTape Pieces (TP)\nStart\nScheduled\nTRIGGER OnStartTapePiecesWaitForTape WITH TP\n\n\n\n\nEnd\nControlled\nTP.WaitForTape = TP.WaitForTape + TIME - TP.CurrentStart\n# TRANSITION TP.2 in logic\n\n\nPerson Wait for Task\n\nStart\n\n \n\n\n\n\nEnd\n\n \n \n\n\n\n\n\n\n\nTable 4.5 lists the events to start and finish the simulation along with the events from the behavioural pathway diagrams along with the state changes for each event. Complete the activities for:\n\nTape Pieces Created\nPerson Created\n\n\n\n\nTable 4.5: Events\n\n\n\n\n\n\nEvent\nParticipants\nType\nState Change\n\n\n\n\nSimulation Start\nNone\nScheduled\nFOR NumPaper DO\n  CREATE Paper P\n  START Paper Created WITH P\nEND FOR\nFOR NumPencils DO\n  CREATE Pencil N\n  START Pencil/Template Created WITH N\nEND FOR\nFOR NumScissors DO\n  CREATE Scissors S\n  START Scissors Created WITH S\nEND FOR\nFOR NumTape DO\n  CREATE Tape T\n  START Tape Created WITH T\nEND FOR\nFOR NumPeople DO\n  CREATE Person H\n  START Person Created WITH H\nEND FOR\n\n\nPaper Created\nPaper (P)\nScheduled\nSTART Paper Wait for Trace WITH P # TRANSITION PAP.1\n\n\nCar Finished\nPaper (P)\nScheduled\nCalculate statistics for P\n\n\nPencil/ Template Created\nPencil (N)\nScheduled\nSTART Pencil Wait for Trace WITH N # TRANSITION PEN.1\n\n\nScissors Created\nScissors (S)\nScheduled\nSTART Scissors Wait for Task WITH S # TRANSITION S.1\n\n\nTape Created\nTape (T)\nScheduled\nSTART Tape Wait for Cut WITH T # TRANSITION T.1\n\n\nTape Pieces Created\n\n\n  \n\n\nTape Pieces Leave\nTape Pieces (TP)\nScheduled\nCalculate statistics for TP\n\n\nPerson Created\n\n\n \n\n\nSimulation Finish\nNone\nScheduled\nCalculate statistics as required for Pencils, Scissors, Tape, Person entities",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data, Structure, and Logic</span>"
    ]
  },
  {
    "objectID": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-logic",
    "href": "chapters/cm_data_structure_logic/cm_data_structure_logic.html#define-the-logic",
    "title": "4  Data, Structure, and Logic",
    "section": "4.3 Define the Logic",
    "text": "4.3 Define the Logic\nThe last part of the structure to define is the logic. You need to define the logic for each of the triggers (the red squares in the behavioural paths, and TRIGGER statements in the state changes). Tables XXX show the logic for some of the triggers. Complete the logic for: - On Tape Wait for Cut.Start - On Cube Wait for Fold.Start - the last condition of On Person Wait for Task.Start\n\n\n\nTable 4.6: OnStartPencilWaitForTrace\n\n\n\n\n\n\n\nTriggered by: Pencil N\n\n\n\n\n\nIF (any Paper P with P.CurrentActivity = Paper Wait for Trace) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Paper P\n  SELECT valid Person H\n  START Trace Car WITH P, H, N\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.7: OnStartScissorsWaitForTask\n\n\n\n\n\n\n\nTriggered by: Scissors S\n\n\n\n\n\nIF (any Paper P with P.CurrentActivity = Paper Wait for Cut Net) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Paper P\n  SELECT valid Person H\n  START Cut Net WITH P, H, S\nELSE IF (any Tape T with T.CurrentActivity = Tape Wait for Cut) AND\n        (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Tape T\n  SELECT valid Person H\n  START Cut Tape WITH T, H, S\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.8: OnStartTapeWaitForCut\n\n\n\n\n\n\n\nTriggered by: Tape T\n\n\n\n\n\nIF (any Scissors S with S.CurrentActivity = Scissors Wait for Task) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Scissors S\n  SELECT valid Person H\n  START Trace Car WITH T, H, S\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.9: OnStartTapePiecesWaitForTape\n\n\n\n\n\n\n\nTriggered by: Tape Pieces TP\n\n\n\n\n\nIF (any Paper P with P.CurrentActivity = Paper Wait for Tape) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Paper P\n  SELECT valid Person H\n  START Trace Car WITH P, H, TP\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.10: OnStartPaperWaitForTrace\n\n\n\n\n\n\n\nTriggered by: Paper P\n\n\n\n\n\nIF (any Pencil N with N.CurrentActivity = Pencil Wait for Trace) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Pencil N\n  SELECT valid Person H\n  START Trace Car WITH P, H, N\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.11: OnStartPaperWaitForCut\n\n\n\n\n\n\n\nTriggered by: Paper P\n\n\n\n\n\nIF (any Scissors S with S.CurrentActivity = Scissors Wait for Task) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Paper P\n  SELECT valid Person H\n  START Cut Car WITH P, H, S\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.12: OnStartPaperWaitForFold\n\n\n\n\n\n\n\nTriggered by: Paper P\n\n\n\n\n\nIF (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Person H\n  START Trace Car WITH P, H\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.13: OnStartPaperWaitForTape\n\n\n\n\n\n\n\nTriggered by: Paper P\n\n\n\n\n\nIF (any Tape Pieces TP with TP.CurrentActivity = Tape Pieces Wait for Tape) AND\n   (any Person H with H.CurrentActivity = Person Wait for Task) THEN\n  SELECT valid Tape Pieces TP\n  SELECT valid Person H\n  START Trace Car WITH P, H, TP\nEND IF\n\n\n\n\n\n\n\n\n\n\nTable 4.14: OnStartPersonWaitForTask\n\n\n\n\n\n\n\nTriggered by: Person H\n\n\n\n\n\n# Prioritise taping, then folding, then cutting, then tracing\nIF (any Paper P with P.CurrentActivity = Paper Wait for Tape Car) AND\n   (any Tape Pieces with TP.CurrentActivity = Tape Pieces Wait for Tape) THEN\n  SELECT valid Paper P\n  SELECT valid Tape Pieces TP\n  START Tape Car WITH P, H, TP\nELSE IF (any Paper P with P.CurrentActivity = Paper Wait for Tape Car) AND\n        (any Tape T with T.CurrentActivity = Tape Wait for Cut) AND\n        (any Scissors S with S.CurrentActivity = Scissors Wait for Task) THEN\n  # There is a car waiting to be taped, but no tape pieces\n  SELECT valid Tape T\n  SELECT valid Scissors S\n  START Cut Tape WITH T, H, S\nELSE IF (any Paper P with P.CurrentActivity = Paper Wait for Fold)\n  SELECT valid Paper P\n  START Fold Car WITH P, H\nELSE IF (any Paper P with P.CurrentActivity = Paper Wait for Cut Net) AND\n        (any Scissors with S.CurrentActivity = Scissors Wait for Task) THEN\n  SELECT valid Paper P\n  START Cut Car Net WITH P, H, S\nELSE IF (any Paper P with P.CurrentActivity = Paper Wait for Trace) AND\n        (any Pencil N with N.CurrentActivity = Pencil Wait for Trace) THEN\n  SELECT valid Paper P\n  SELECT valid Pencil N\n  START Fold Car WITH P, H, N\nEND IF",
    "crumbs": [
      "Conceptual Modelling Labs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Data, Structure, and Logic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html",
    "title": "5  Radiology Clinic",
    "section": "",
    "text": "5.1 Data",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#data",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#data",
    "title": "5  Radiology Clinic",
    "section": "",
    "text": "Table 5.1: List of Global Variables\n\n\n\n\n\nName\nDescription\nInitial Value\n\n\n\n\nNextPatIdNum\nThe Id number that will be assigned to the next patient\n1\n\n\nNextReceptionistIdNum\nThe Id number that will be assigned to the next receptionist\n1\n\n\nNextCTMachineIdNum\nThe Id number that will be assigned to the next CT Machine\n1\n\n\n\\(P\\)\nThe set of all patients\n\\(\\emptyset\\)\n\n\n\\(R\\)\nThe set of all receptionists\n\\(\\emptyset\\)\n\n\n\\(C\\)\nThe set of all CT Machines\n\\(\\emptyset\\)\n\n\n\n\n\n\n\n\n\nTable 5.2: List of Data Modules\n\n\n\n\n\nName\nSource\nIdentification\nInput\nOutput\n\n\n\n\nPatientInterarrivalTime\nPoisson Process\nParameter\nMean interarrival time\nSample from Distribution\n\n\nNumReceptionists\nConstant\nParameter\nN/A\nValue\n\n\nNumCTMachines\nConstant\nParameter\nN/A\nValue\n\n\nCheckInTime\nUniform Distribution\nParameter\nMin and max time\nSample from Distribution\n\n\nScanTime\nLog-normal Distribution\nParameter\nMean and std. dev.\nSample from Distribution",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#components",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#components",
    "title": "5  Radiology Clinic",
    "section": "5.2 Components",
    "text": "5.2 Components\n\n\n\nTable 5.3: List of Entities\n\n\n\n\n\nEntity\nAttributes\n\n\n\n\nPatient\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\nReceptionist\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\nCT Machine\nID\n\n\n\nState\n\n\n\nStateTimes\n\n\n\n\n\n\n\n\n\nTable 5.4: List of Transitions\n\n\n\n\n\nNo.\nParticipant\nFrom Event\nTo Event\n\n\n\n\n1\nPatient\nArrive(P)\nWait for check in.Start\n\n\n2\nPatient\nWait for check in.End\nCheck in.Start\n\n\n3\nPatient\nCheck in.End\nWait for scan.Start\n\n\n4\nPatient\nWait for scan.End\nScan.Start\n\n\n5\nPatient\nScan.End\nLeave(P)\n\n\n6\nReceptionist\nArrive(R)\nWait for task(R).Start\n\n\n7\nReceptionist\nWait for task(R).End\nCheck in.Start\n\n\n8\nReceptionist\nCheck in.End\nWait for task(R).Start\n\n\n9\nReceptionist\nWait for task(R).End\nLeave(R)\n\n\n10\nCT Machine\nArrive(CT)\nWait for task(CT).Start\n\n\n11\nCT Machine\nWait for task(CT).End\nScan.Start\n\n\n12\nCT Machine\nScan.End\nWait for task(CT).Start\n\n\n13\nCT Machine\nWait for task(CT).End\nLeave(CT)\n\n\n\n\n\n\n\n\n\nTable 5.5: Activities\n\n\n\n\n\n\nActivity\nParticipants\nEvent\nType\nState Change\n\n\n\n\nWait for Check In\nPatient (p)\nStart\nScheduled\nTRIGGER OnStartWaitForCheckIn WITH p\n\n\n\n\nEnd\nControlled\n\n\n\nCheck In\nPatient (p), Receptionist (r)\nStart\nControlled\nSCHEDULE Check In.End at TIME + CheckInTime()\n\n\n\n\nEnd\nScheduled\nSTART Wait for Scan WITH p\nSTART Wait for Task (R) WITH r\n\n\nWait for Scan\nPatient (p)\nStart\nScheduled\n\n\n\n\n\nEnd\nControlled\nTRIGGER OnStartWaitForScan WITH p\n\n\nScan\nPatient (p), CTMachine (c)\nStart\nControlled\nSCHEDULE Scan.End at TIME + ScanTime()\n\n\n\n\nEnd\nScheduled\nSTART Leave (P) WITH p\nSTART Wait for Task (CT) WITH c\n\n\nWait for Task (R)\nReceptionist (r)\nStart\nScheduled\nTRIGGER OnStartWaitForTaskR WITH r\n\n\n\n\nEnd\nControlled\n\n\n\nWait for Task (CT)\nCTMachine (c)\nStart\nScheduled\nTRIGGER OnStartWaitForTaskCT WITH c\n\n\n\n\nEnd\nControlled\n\n\n\n\n\n\n\n\n\n\n\nTable 5.6: Events\n\n\n\n\n\n\nEvent\nParticipants\nType\nState Change\n\n\n\n\nSimulation Start\n-\nScheduled\nSCHEDULE Arrival (R) at TIME\nSCHEDULE Arrival (CT) at TIME\nSCHEDULE Arrival (P) at TIME + PatientInterArrival()\n\n\nArrival (P)\nPatient (p)\nScheduled\np.ID = NextPatIDNum\np.Priority = PatientPriority()\nNextPatIDNum = NextPatIDNum + 1\nSCHEDULE Arrival (P) at TIME + PatientInterArrival()\nSTART Wait for Check In WITH p\n\n\nLeave (P)\nPatient (p)\nScheduled\nCalculate statistics for p\n\n\nArrival (R)\nReceptionist (r)\nScheduled\nr.ID = NextReceptionistIDNum\nNextReceptionistIDNum = NextReceptionistIDNum + 1\nIF NextReceptionistIDNum &lt;= NumReceptionists THEN\n    SCHEDULE Arrival (R) at TIME\nEND IF\nSTART Wait for Task (R) WITH r\n\n\nLeave (R)\nReceptionist (r)\nScheduled\nCalculate statistics for r\n\n\nArrival (CT)\nCTMachine (c)\nScheduled\nc.ID = NextCTMachineIDNum\nNextCTMachineIDNum = NextCTMachineIDNum + 1\nIF NextCTMachineIDNum &lt;= NumCTMachines THEN\n    SCHEDULE Arrival (CT) at TIME\nEND IF\nSTART Wait for Task (CT) WITH c\n\n\nLeave (P)\nCTMachine (c)\nScheduled\nCalculate statistics for c",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#activity-diagrams",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#activity-diagrams",
    "title": "5  Radiology Clinic",
    "section": "5.3 Activity Diagrams",
    "text": "5.3 Activity Diagrams\n\n\n\n\n\n\nFigure 5.1: Patient Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 5.2: Receptionist Activity Diagram\n\n\n\n\n\n\n\n\n\nFigure 5.3: CT Activity Diagram",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  },
  {
    "objectID": "chapters/clinic_1_cm/clinic_1_cm.html#logic",
    "href": "chapters/clinic_1_cm/clinic_1_cm.html#logic",
    "title": "5  Radiology Clinic",
    "section": "5.4 Logic",
    "text": "5.4 Logic\n\n\n\nTable 5.7: OnStartWaitForCheckIn\n\n\n\n\n\n\nTriggered by: Patient p\n\n\n\n\n\nreceps = {r FOR r IN R IF r.State = \"Wait for task (R)\"}\nIF receps IS NOT empty THEN \n    r_hat = argmin{r.CurrentStart FOR r IN receps}\n    START Check In WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 5.8: OnStartWaitForScan\n\n\n\n\n\n\nTriggered by: Patient p\n\n\n\n\n\ncts = {c FOR c IN C IF c.State = \"Wait for task (C)\"}\nIF cts IS NOT empty THEN \n    c_hat = argmin{c.CurrentStart FOR c IN cts}\n    START Scan WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 5.9: OnStartWaitForTaskR\n\n\n\n\n\n\nTriggered by: Receptionist r\n\n\n\n\n\npatients = {p FOR p IN P IF p.State = \"Wait for Check In\"}\nIF patients IS NOT empty THEN \n    p_hat = argmin{p.CurrentStart FOR p IN patients}\n    START Check In WITH p, r_hat\nEND IF\n\n\n\n\n\n\n\n\n\nTable 5.10: OnStartWaitForTaskCT\n\n\n\n\n\n\nTriggered by: CTMachine c\n\n\n\n\n\npatients = {p FOR p IN P IF p.State = \"Wait for Scan\"}\nIF patients IS NOT empty THEN \n    p_hat = argmin{p.CurrentStart FOR p IN patients}\n    START Scan WITH p, r_hat\nEND IF",
    "crumbs": [
      "Conceptual Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Radiology Clinic</span>"
    ]
  }
]